.. _ensemble_analysis:

EnsembleAnalysis
==========================

This module analyzes ensembles in terms of intermediate order. In this module, ensembles have internal variable names (identifiers).

``addpdb``
---------------------------------

Input of template conformers from PDB files. 

.. code-block:: matlab

    addpdb file identifier

Arguments
    *   ``file`` - file name, can contain wildcards
    *   ``identifier`` - module-internal identifier for the ensemble, e.g. 'ensemble_1'
Remarks
    *   use wildcard '*' for part of the filename to process all conformers from a previous step in the pipeline 
    *   individual PDB files can contain a single model or several models; this can be freely mixed
	
``getens``
---------------------------------

Input of template conformers from PDB files specified by an MMMx ensemble list. 

.. code-block:: matlab

    gentens file identifier

Arguments
    *   ``file`` - name of an MMMx ensemble file list (extension '.ens')
    *   ``identifier`` - module-internal identifier for the ensemble, e.g. 'ensemble_2'
Remarks
    *   best way of analyzing an ensemble generated by the EnsembleFit module 

``subsample``
---------------------------------

Subsample an ensemble to a smaller ensemble. 

.. code-block:: matlab

    subsample ratio input output

Arguments
    *   ``ratio`` - integer reduction factor for ensemble size
    *   ``input`` - identifier of the input ensemble
    *   ``output`` - identifier of the output (reduced) ensemble
Remarks
    *   this is particularly useful for molecular dynamics trajectories

``figures``
---------------------------------

Subsample an ensemble to a smaller ensemble. 

.. code-block:: matlab

    figures format

Arguments
    *   ``format`` - one of the formats in which Matlab can save figures, e.g. 'pdf', default is 'pdf'
Remarks
    *   figure saving is on by default in this module, use format 'off' to switch it off


``sort``
---------------------------------

Iterative hierarchical clustering and sorting of an ensemble bsed on distance root-mean square deviation. 

.. code-block:: matlab

    sort filename input [option]

Arguments
    *   ``filename`` - name of the output ensemble list, extension should be '.ens'
    *   ``input`` - identifier of the input ensemble
    *   ``option`` - option 'oriented' assumes that the conformers are already in the same frame, otherwise they are optimally superimposed
    *   ``option`` - option 'similarity' starts from the conformer with highest population and builds a list with maximum similarity between neighbours
    *   ``option`` - option 'population' sorts conformers by descending population
Remarks
    *   by default (no option specified) similar conformers are grouped to clusters and the clusters are sorted by descending population
    *   for cases with multiple discrete states, the default is strongly recommended

``measures``
---------------------------------

Compute various measures of the ensemble. This is a block key with `n` lines for `n` measures. 

.. code-block:: matlab

    measures filename  input [range]
       subkey
       ...
    .measures

Arguments
    *   ``filename`` - basis name for the output files, abbreviated below as '%s'
    *   ``input`` - identifier for the input ensemble
    *   ``range`` - optional MMMx address that specifies only a range of a conformer for analysis, e.g. `(A)187-320`
    *   ``subkey`` - a subkey that specifies a measure from the following list
Available subkeys
    *   ``matlab`` - save output data to Matlab files
	*   ``csv`` - save output data to comma-separated value files
    *   ``oriented`` - assume that conformers are already oriented, default is false (conformers are superimposed)
    *   ``Rg`` - radius of gyration. including standard deviation (output to logfile)
    *   ``width`` - ensemble width and density in Angstroem (output to logfile), also computes pair r.m.s.d. matrix and central conformer
    *   ``correlation`` - correlation matrix, output as figure and to files 'residue\_pair\_correlation_%s' with extensions '.csv'and '.mat'
    *   ``sort`` - sort for computation of correlation matrix
    *   ``drms`` - uses distance root mean square deviation for correlation matrix and sorting
    *   ``compactness`` - compactness matrix    
Remarks
    *   saving output to both Matlab ('.mat') and '.csv' files is allowed 
    *   if neither the ``matlab`` nor the ``csv`` subkey is present, output is only to figures or logfile
    *   ``oriented`` affects only computation of pair r.m.s.d. (correlation matrix) 
	
``flexibility``
---------------------------------

Computes local flexibility profiles of peptide or nucleotide chains 

.. code-block:: matlab

    flexibility filename input

Arguments
    *   ``filename`` - name of the output file
    *   ``input`` - identifier of the input ensemble
Remarks
    *   the algorithm analyzes variation of backbone dihedrals `\psi` and `\phi`
    *   for RNA, pseudo-torsion angles are analyzed
    *   local flexibility ranges between 0 (rigid) and 1 (random)

``order``
---------------------------------

Computes local order profiles of peptide or nucleotide chains 

.. code-block:: matlab

    order filename input

Arguments
    *   ``filename`` - name of the output file
    *   ``input`` - identifier of the input ensemble
Remarks
    *   the algorithm is based on an adaptation of Flory's  characteristic ratio to polymers with secondary structure
    *   the local order parameter ranges between 0 (random) and 1 (perfect order)
    *   the local order parameter is somewhat longer ranged than the flexibility parameter mentioned above

``density``
---------------------------------

Computes a 3D electron density map of an ensemble 

.. code-block:: matlab

    density filename input [range [resolution]]

Arguments
    *   ``filename`` - name of the output file, specify with extension '.mat' for MMMx density files or '.mrc' for MRC files
    *   ``input`` - identifier of the input ensemble
    *   ``range`` - optional MMMx address that specifies only a range of a conformer for analysis, e.g. `(A)187-320`
    *   ``resolution`` - resolution in Angstroem (optional), defaults to 1
Remarks
    *   output is as a '.mrc' file, which can be visualized by most protein graphics programs
	*   output can also be as a Matlab file for visualization with MMM or the 'visualize_isosuface' function
    *   a larger value for resolution leads to faster computation and a smaller file and may still be adequate for strong disorder
		
``property``
---------------------------------

Computes a 3D property map of an ensemble 

.. code-block:: matlab

    property filename input [range [resolution [property [pH [I]]]]]

Arguments
    *   ``filename`` - name of the output file, specify with extension '.mat' for MMMx density files or '.mrc' for MRC files
    *   ``input`` - identifier of the input ensemble
    *   ``range`` - optional MMMx address that specifies only a range of a conformer for analysis, e.g. `(A)187-320`
    *   ``resolution`` - resolution in Angstroem (optional), defaults to 1
    *   ``property`` - can be `electrostatic` (default), `cation-pi`, or `hydrophobic`
    *   ``pH`` - pH value, default is 7
    *   ``I`` - ionic strength, default is 0.150 M 
Remarks
    *   output is as a '.mrc' file, which can be visualized by most protein graphics programs
    *   output can also be as a Matlab file for visualization with MMM or the 'visualize_isosuface' function
    *   a larger value for resolution leads to faster computation and a smaller file and may still be adequate for strong disorder

``coulomb``
---------------------------------

Computes and displays the ensemble averaged Coulomb interaction for pairs of charged residues 

.. code-block:: matlab

    coulomb filename input [aa1 [aa2 [pH [I [Tmax]]]]]

Arguments
    *   ``filename`` - name of the output file, comma-separated value file
    *   ``input`` - identifier of the input ensemble
    *   ``aa1`` - amino acid type 1, defaults to `Arg`, use three-letter code
    *   ``aa2`` - amino acid type 2, defaults to `Glu`, use three-letter code
    *   ``pH`` - pH value, default is 7
    *   ``I`` - ionic strength, default is 0.150 M 
    *   ``Tmax`` - temperature corresponding to white on the color scale, defaults to the maximum interaction among all pairs
Remarks
    *   output is as a '.csv' file, with the residue numbers in the first and second column and the Coulomb interaction in the third column
    *   in addition, a figure is output with a `hot` colormap, where black is no interaction and white the maximum interaction
    *   the interaction is scaled by the Boltzmann constant, so that it corresponds to the temeparture where it matches thermal energy
    *   specify parameter `Tmax` if you want to compare different residue pairs for the same ensemble
    *   a salt bridge at 0.150 M ionic strength is in the range of 350-400 K

``asphericity``
---------------------------------

Computes the ensemble averaged asphericity and plots asphericity versus radius of gyration for all conformers 

.. code-block:: matlab

    asphericity input [address]

Arguments
    *   ``input`` - identifier of the input ensemble
    *   ``address`` - chain address or chain and residue ranges, e.g. `(A)4-270`, defaults to `(A)`
Remarks
    *   output is a figure with Rg on the x axis and asphericity on the y axis
    *   each conformer corresponds to one point marker, with MarkerSize corresponding to population
	
``superimpose``
---------------------------------

Superposition of conformers in an ensemble 

.. code-block:: matlab

    superimpose output input [range [template [template_range [mode]]]]

Arguments
    *   ``output`` - name of the output file, extension '.pdb' is appended, if none
    *   ``input`` - identifier of the input ensemble
    *   ``range`` - optional MMMx address that specifies only a range of a conformer for analysis, e.g. `(A)187-320`
    *   ``template`` - template ensemble or structure (optional)
    *   ``template_range`` - optional MMMx address that specifies a template range of a conformer, e.g. `(B)187-320`
    *   ``mode`` - optional string mode can be 'central' to request superposition onto the central conformer
Remarks
    *   by default, superposition is to the first conformer of the input ensemble if no range is provided
    *   if a template and central are specified, superposition is to central conformer of a superensemble consisting of input and template
    *   the range argument '(*)' selects the complete structure
	
``save``
---------------------------------

Save ensemble to a single PDB file  

.. code-block:: matlab

    save output ensemble_id

Arguments
    *   ``output`` - name of the output file, extension '.pdb' is appended, if none
    *   ``ensemble_id`` - identifier of the ensemble to be save
Remarks
    *   populations are stored in a REMARK 400 field
  
``compare``
---------------------------------

Comparison of two ensembles 

.. code-block:: matlab

    compare ensemble_1 ensemble_2 [range [mode]]

Arguments
    *   ``ensemble_1`` - identifier of the first ensemble
    *   ``ensemble_2`` - identifier of the second ensemble
    *   ``range`` - optional MMMx address that specifies only a range of a conformer for comparison, e.g. `(A)187-320`
    *   ``mode`` - optional string mode can be 'resolved' to request residue-wise comparison
Remarks
    *   the algorithm computes overlap of pseudo-electron densities between ensembles
    *   the range argument '(*)' selects the complete structure
    *   the two ensembles may have different numbers of conformers
    *   residue-wise comparison of large ensembles can take very long

``match``
---------------------------------

Match conformers in one ensemble by conformers in a second ensemble 

.. code-block:: matlab

    match ensemble_1 ensemble_2 [range [range2]]

Arguments
    *   ``ensemble_1`` - identifier of the first ensemble
    *   ``ensemble_2`` - identifier of the second ensemble
    *   ``range`` - optional MMMx address that specifies a chain/residue range for matching, e.g. `(A)187-320`
    *   ``range`` - optional MMMx address that specifies a different range in the second ensemble for comparison, e.g. `(B)1-134`
Remarks
    *   the algorithm finds the closest conformer by distance root mean square in the second ensemble for each conformer in the first ensemble 
    *   the range argument '(*)' selects the complete structure
    *   the range argument can be missing (complete structure is the default)
    *   if the first range argument is given and the second one is missing, the same range is applied in the second ensemble
    *   the list of matches and the maximum mismatch are reported in the log file

  	  	